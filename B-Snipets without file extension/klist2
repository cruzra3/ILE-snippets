      *
      * Assume File1 below contains a record Rec1 with a composite key
      * made up of three key fields: Key1, Key2, and Key3. Key2 and Key3
      * are null-capable. Key1 is not null-capable.
      * Each key field is two characters long.
     FFile1     IF   E             DISK
     C     Full_Kl       KLIST
     C                   KFLD                    Key1
     C                   KFLD      *IN02         Key2
     C                   KFLD      *IN03         Key3
     C     Partial_Kl    KLIST
     C                   KFLD                    Key1
     C                   KFLD      *IN05         Key2
      *
      * *IN02 is ON and *IN03 is OFF for the SETLL operation below.
      * File1 will be positioned at the next record that has a key
      * that is equal to or greater than 'AA??CC' (where ?? is used
      * in this example to indicate NULL)
      *
      * Because *IN02 is ON, the actual content in the search argument
      * for Key2 will be ignored.
      *
      * If a record exists in File1 with 'AA' in Key1, a null Key2, and
      * 'CC' in Key3, indicator 90 (the Eq indicator) will be set ON.
      *
     C                   MOVE      'AA'          Key1
     C                   MOVE      'CC'          Key3
     C                   EVAL      *IN02 = '1'
     C                   EVAL      *IN03 = '0'
     C     Full_Kl       SETLL     Rec1                                   90
      *
      * The CHAIN operation below will retrieve a record with 'JJ' in Key1,
      * 'KK' in Key2, and a null Key3. Again, because *IN03 is ON, even
      * if the programmer had moved some value (say 'XX') into the search
      * argument for Key3, 'XX' will not be used. This means if File1
      * actually has a record with a key 'JJKKXX', that record will not
      * be retrieved.
      *
     C                   MOVE      'JJ'          Key1
     C                   MOVE      'KK'          Key2
     C                   EVAL      *IN02 = '0'
     C                   EVAL      *IN03 = '1'
     C     Full_Kl       CHAIN     Rec1                               80
      *
      * The CHAIN operation below uses a partial key as the search argument.
      * It will retrieve a record with 'NN' in Key1, a null key2, and any
      * value including a null value in Key3.
      *
      * In the database, the NULL value occupies the highest position in
      * the collating sequence. Assume the keys in File1 are in ascending
      * sequence. If File1 has a record with 'NN??xx' as key (where ??
      * means NULL and xx means any value other than NULL), that record
      * will be retrieved. If such a record does not exist in File1, but
      * File1 has a record with 'NN????' as key, the 'NN????' record will
      * be retrieved. The null flags for Key2 and Key3 will be set ON
      * as a result.
     C                   MOVE      'NN'          Key1
     C                   SETON                                        05
     C     Partial_Kl    CHAIN     Rec1                               70
     C                   Seton                                        Lr
